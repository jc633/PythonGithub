# coding:utf-8
"""
Django settings for EasyChart project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.conf.global_settings import STATICFILES_DIRS, MEDIA_ROOT,\
    AUTH_USER_MODEL, AUTHENTICATION_BACKENDS, STATIC_ROOT

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&xz_2hq^*(!)=p@fl$n^-^$g363yde5%tu@q&ym!*k=g7=gnyd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 开发模式

ALLOWED_HOSTS = ['localhost', '10.6.31.21', '127.0.0.1']

# default login url
LOGIN_URL = '/user/login'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    #     'django.contrib.admin.apps.SimpleAdminConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'User',
    'Inform',
    'xadmin',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #     'MyMiddleware.LoginRequiredMiddleware.LoginRequiredMiddleware',
]

ROOT_URLCONF = 'EasyChart.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  # 添加media文件夹
            ],
        },
    },
]

WSGI_APPLICATION = 'EasyChart.wsgi.application'

# 使用自定义的用户模型
AUTH_USER_MODEL = 'User.user'

# 使用自定义的登录验证后台
# AUTHENTICATION_BACKENDS = ['User.myBackends.CustomLoginBackend']


# # haystack配置
# HAYSTACK_CONNECTIONS = {
#     'default': {
#         'ENGINE': 'Product.whoosh_cn_backend.WhooshEngine',
#         'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
#     },
# }
# # 自动更新索引
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
#
# # 自定义的高亮路径
# HAYSTACK_CUSTOM_HIGHLIGHTER = 'Product.templatetags.highlighting.Highlighter'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',   # 数据库类型
        'NAME': 'easy_chart',         # 数据库名称֮
        'USER': 'root',         # 用户名
        'PASSWORD': 'root',     # 密码
        'HOST': 'localhost',    # 主机名
        'PORT': '3306',         # 端口号
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGE_CODE = 'zh-Hans'
TIME_ZONE = 'Asia/Shanghai'

# DATETIME_FORMAT = 'Y-m-d H:i:s'
#
# DATE_FORMAT = 'Y-m-d'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static/').replace('\\', '/')
STATICFILES_DIRS = os.path.join(BASE_DIR, 'static').replace('\\', '/'),

# Media files (save the upload files)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/').replace('\\', '/')
